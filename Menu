local screeng = Instance.new("ScreenGUI")
local frame = Instance.new("Frame")
local textb = Instance.new("Textbutton") -- Fly
local textb = Instance.new("Textbutton") -- Speed Gui
local textb = Instance.new("Textbutton") -- Noclip
local textb = Instance.new("Textbutton") -- View User
local textb = Instance.new("Textbutton") -- The Chosen one (NOT MINE)

-- Fly (may be broken)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local flying = false
local speed = 50
local bodyVelocity

-- Create a BodyVelocity object for flying
local function startFlying()
    if flying then return end
    flying = true

    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(500000, 500000, 500000) -- Make sure the force is strong enough
    bodyVelocity.Velocity = Vector3.new(0, speed, 0) -- Start with upward speed
    bodyVelocity.Parent = character:WaitForChild("HumanoidRootPart")
    
    -- Optional: make the camera follow the character's head while flying
    game:GetService("TweenService"):Create(
        workspace.CurrentCamera, 
        TweenInfo.new(0.5), 
        {FieldOfView = 90} 
    ):Play()
end

-- Stop the flying by removing BodyVelocity
local function stopFlying()
    if not flying then return end
    flying = false

    if bodyVelocity then
        bodyVelocity:Destroy()
    end
end

-- Toggle the flying state
local function toggleFly()
    if flying then
        stopFlying()
    else
        startFlying()
    end
end

-- Keybind for flying (e.g., pressing the "F" key)
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.F then
        toggleFly()
    end
end)

-- Speed Gui (default is 16)
